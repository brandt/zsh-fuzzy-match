# This is the default data source for fuzzy-match, it will 
# recursively search for files that matched the user-entered pattern
#

_fuzzy-match-find() {
	echo "CLEAR"
	if [ -n "$1" ]; then
		_fuzzy-match-walk "$CWD" "$1" 0
	else
		_fuzzy-match-walk "$CWD" "" 0
	fi
	sleep 5
}

_fuzzy-match-walk() {
	local cwd=$1
	local pattern=$2
	local matches=$3
	local fpattern=
	if [ -n "$pattern" ]; then
		# explicitly set the scope of the '#ia2' flag so it wont apply to
		# the negated patterns
		fpattern="$cwd/(((#ia2)*${(q)pattern}*)${PRUNE_REL_FILES})${PRUNE_FILES}(.N)"
	else
		fpattern="$cwd/(*${PRUNE_REL_FILES})${PRUNE_FILES}(.N)"
	fi
	local dpattern="$cwd/(*${PRUNE_REL_DIRS})${PRUNE_DIRS}(/N)"
	for file in ${~fpattern}; do
		echo "APPEND-RESULT:$file"
		# no need to keep searching after the screen is filled with results
		[ $((++matches)) -ge $MAX_RESULTS ] && sleep 5 && exit
	done
	for dir in ${~dpattern}; do
		_fuzzy-match-walk "$dir" "$pattern" "$matches"
	done
}

_fuzzy-match-load-ignore-patterns() {
	CWD="$PWD"
	# Load the user ignore  patterns
	PRUNE_REL_DIRS=""
	PRUNE_REL_FILES=""
	PRUNE_DIRS=""
	PRUNE_FILES=""
	if [ -r "$CWD/.fuzzy_ignore" ]; then
		exec 3<"$CWD/.fuzzy_ignore"
		while read -u 3 ignore_pattern; do
			# strip line comments in the ignore file
			local ignore_pattern="${ignore_pattern%%\#*}"
			[ -z $ignore_pattern ] && continue
			if [ "$ignore_pattern" -pcre-match ^/ ]; then
				# relative to the base directory
				if [ "$ignore_pattern" -pcre-match /$ ]; then
					PRUNE_DIRS="$PRUNE_DIRS~$CWD${ignore_pattern%/}"
				else
					PRUNE_FILES="$PRUNE_FILES~$CWD$ignore_pattern"
				fi
			else
				# relative to the current directory being scanned
				if [ "$ignore_pattern" -pcre-match /$ ]; then
					PRUNE_REL_DIRS="$PRUNE_REL_DIRS~${ignore_pattern%/}"
				else
					PRUNE_REL_FILES="$PRUNE_REL_FILES~$ignore_pattern"
				fi
			fi
		done
		exec 3>&-
	fi
	# shared this with the finder process
	export PRUNE_DIRS PRUNE_FILES PRUNE_REL_DIRS PRUNE_REL_FILES
}

_fuzzy-match-file-glob() {
	zmodload zsh/pcre
	setopt extendedglob
	setopt globdots

	export MAX_RESULTS=$1
	export CWD="$(pwd)"
	_fuzzy-match-load-ignore-patterns

	# read search patterns from stdin, and send results to stdout
	print -N $'CLEAR'
	print -N $'APPEND-RESULT:Testing'
	print -N $'APPEND-RESULT:Line'
	print -N $'APPEND-RESULT:Navigation'
	read stub
}

unfunction fuzzy-match-file-glob
